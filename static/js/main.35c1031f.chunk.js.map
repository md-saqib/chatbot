{"version":3,"sources":["assets/vtulogo.png","App.js","reportWebVitals.js","index.js"],"names":["theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","Review","props","state","name","gender","age","steps","this","setState","style","width","value","Component","defaultProps","undefined","SimpleForm","headerTitle","botAvatar","BotAvt","recognitionEnable","id","message","trigger","user","options","label","validator","isNaN","component","asMessage","update","end","ThemedExample","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35c1031f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vtulogo.383b5460.png\";","import ChatBot from 'react-simple-chatbot';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BotAvt from './assets/vtulogo.png';\nimport { ThemeProvider } from 'styled-components';\n\n// all available props\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue,Helvetica,Arial,sans-serif',\n  headerBgColor: '#202121',\n  headerFontColor: '#fff',\n  headerFontSize: '14px',\n  botBubbleColor: '#202121',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      gender: '',\n      age: '',\n    };\n  }\n\n  componentWillMount() {\n    const { steps } = this.props;\n    const { name, gender, age } = steps;\n\n    this.setState({ name, gender, age });\n  }\n\n  render() {\n    const { name, gender, age } = this.state;\n    return (\n      <div style={{ width: '100%' }}>\n        <h3>Summary</h3>\n        <table>\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{name.value}</td>\n            </tr>\n            <tr>\n              <td>Gender</td>\n              <td>{gender.value}</td>\n            </tr>\n            <tr>\n              <td>Age</td>\n              <td>{age.value}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nReview.propTypes = {\n  steps: PropTypes.object,\n};\n\nReview.defaultProps = {\n  steps: undefined,\n};\n\nclass SimpleForm extends Component {\n  render() {\n    return (\n      <ChatBot\n      headerTitle=\"Welcome To VTU ChatBot\"\n      botAvatar= {BotAvt}\n      recognitionEnable={true}\n        steps={[\n          {\n            id: '1',\n            message: 'What is your name?',\n            trigger: 'name',\n          },\n          {\n            id: 'name',\n            user: true,\n            trigger: '3',\n          },\n          {\n            id: '3',\n            message: 'Hi {previousValue}! What is your gender?',\n            trigger: 'gender',\n          },\n          {\n            id: 'gender',\n            options: [\n              { value: 'male', label: 'Male', trigger: '5' },\n              { value: 'female', label: 'Female', trigger: '5' },\n            ],\n          },\n          {\n            id: '5',\n            message: 'How old are you?',\n            trigger: 'age',\n          },\n          {\n            id: 'age',\n            user: true,\n            trigger: '7',\n            validator: (value) => {\n              if (isNaN(value)) {\n                return 'value must be a number';\n              } else if (value < 0) {\n                return 'value must be positive';\n              } else if (value > 120) {\n                return `${value}? Come on!`;\n              }\n\n              return true;\n            },\n          },\n          {\n            id: '7',\n            message: 'Great! Check out your summary',\n            trigger: 'review',\n          },\n          {\n            id: 'review',\n            component: <Review />,\n            asMessage: true,\n            trigger: 'update',\n          },\n          {\n            id: 'update',\n            message: 'Would you like to update some field?',\n            trigger: 'update-question',\n          },\n          {\n            id: 'update-question',\n            options: [\n              { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n              { value: 'no', label: 'No', trigger: 'end-message' },\n            ],\n          },\n          {\n            id: 'update-yes',\n            message: 'What field would you like to update?',\n            trigger: 'update-fields',\n          },\n          {\n            id: 'update-fields',\n            options: [\n              { value: 'name', label: 'Name', trigger: 'update-name' },\n              { value: 'gender', label: 'Gender', trigger: 'update-gender' },\n              { value: 'age', label: 'Age', trigger: 'update-age' },\n            ],\n          },\n          {\n            id: 'update-name',\n            update: 'name',\n            trigger: '7',\n          },\n          {\n            id: 'update-gender',\n            update: 'gender',\n            trigger: '7',\n          },\n          {\n            id: 'update-age',\n            update: 'age',\n            trigger: '7',\n          },\n          {\n            id: 'end-message',\n            message: 'Thanks! Your data was submitted successfully!',\n            end: true,\n          },\n        ]}\n      />\n    );\n  }\n}\n\n\nconst ThemedExample = () => (\n  <ThemeProvider theme={theme}>\n    <SimpleForm/>\n  </ThemeProvider>\n);\n\nexport default ThemedExample;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ThemedExample from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemedExample />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}