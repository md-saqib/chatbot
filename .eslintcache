[{"D:\\XAMPP\\htdocs\\chatbot\\src\\index.js":"1","D:\\XAMPP\\htdocs\\chatbot\\src\\reportWebVitals.js":"2","D:\\XAMPP\\htdocs\\chatbot\\src\\App.js":"3","D:\\XAMPP\\htdocs\\chatbot\\src\\components\\searchCollegeByName.js":"4"},{"size":308,"mtime":1628578246780,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1628578246836,"results":"7","hashOfConfig":"6"},{"size":14102,"mtime":1628601648031,"results":"8","hashOfConfig":"6"},{"size":3486,"mtime":1628600774372,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hamlmz",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"D:\\XAMPP\\htdocs\\chatbot\\src\\index.js",[],"D:\\XAMPP\\htdocs\\chatbot\\src\\reportWebVitals.js",[],"D:\\XAMPP\\htdocs\\chatbot\\src\\App.js",["20"],"D:\\XAMPP\\htdocs\\chatbot\\src\\components\\searchCollegeByName.js",["21","22"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport ChatBot, { Loading } from 'react-simple-chatbot';\n\nfunction SearchCollegeByName(props) {\n    const [loading, setLoading] = useState(true);\n    const [results, setResults] = useState({});\n    const [trigger, setTrigger] = useState(false);\n    console.log(props)\n    const [collegeName, setCollegeName] = useState(props.steps.searchVTUColleges.value);\n    //const getCollegeByNameUrl = 'http://vtubot.tech/services/searchcollege.php';\n    const getCollegeByNameUrl = 'localhost/chatbot/services/searchcollege.php';\n\n    useEffect(() => {\n        axios\n            .get(\n                getCollegeByNameUrl + '?college=' + collegeName\n            )\n            .then(function (response) {\n                if (response.status === 200) {\n                    let collegeDetails = response.data.data;\n                    if (collegeDetails) {\n                        setResults(collegeDetails);\n                        setLoading(false);\n                    } else {\n                        setResults([]);\n                        setLoading(false);\n                    }\n                }\n            })\n            .catch(function () {\n                setResults('Error, try again later!');\n                setLoading(false);\n            });\n    }, [collegeName]);\n\n    const triggerNext = () => {\n        setTrigger(true);\n        props.triggerNextStep();\n    };\n\n    return (\n        <div className=\"dbpedia\">\n            { loading && <Loading /> }\n            {results && results.length > 0 && results.map(\n                (college, index) => {\n                    return (\n                        <div key={'college_' + index}>\n                            <div>College Name: {college.collegeName}</div>\n                            <div>College Code: {college.collegeCode}</div>\n                            <div>College Suburb: {college.collegeSuburb}</div>\n                            <div>College Email: {college.collegeEmail}</div>\n                            <div>College STD: {college.collegeSTD}</div>\n                            <div>College Phone: {college.collegePhone}</div>\n                            <div>College Website: {college.collegeWebsite}</div>\n                            <div>College Address: {college.collegeAddress}</div>\n                            <div>College City: {college.collegeCity}</div>\n                            <div>College District: {college.collegeDistrict}</div>\n                        </div>\n                    )\n                }\n            )}\n            {\n                results.length === 0 && <div>College not found!</div>\n            }\n            {\n                !loading &&\n                <div\n                    style={{\n                        textAlign: 'center',\n                        marginTop: 20,\n                    }}\n                >\n                    {\n                        !trigger &&\n                        <button\n                            onClick={() => triggerNext()}\n                        >\n                            Search Again\n                        </button>\n                    }\n                </div>\n            }\n        </div>\n    );\n}\n\nSearchCollegeByName.propTypes = {\n    steps: PropTypes.object,\n    triggerNextStep: PropTypes.func,\n};\n\nSearchCollegeByName.defaultProps = {\n    steps: undefined,\n    triggerNextStep: undefined,\n};\n\nexport default SearchCollegeByName;",["23","24"],{"ruleId":"25","severity":1,"message":"26","line":1,"column":19,"nodeType":"27","messageId":"28","endLine":1,"endColumn":26},{"ruleId":"25","severity":1,"message":"29","line":4,"column":8,"nodeType":"27","messageId":"28","endLine":4,"endColumn":15},{"ruleId":"25","severity":1,"message":"30","line":11,"column":25,"nodeType":"27","messageId":"28","endLine":11,"endColumn":39},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'ChatBot' is defined but never used.","'setCollegeName' is assigned a value but never used.","no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-global-assign","no-unsafe-negation"]